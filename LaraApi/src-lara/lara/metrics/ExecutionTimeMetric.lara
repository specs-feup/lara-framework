import lara.metrics.Metric;
import lara.metrics.MetricResult;
import lara.code.Timer;
import lara.util.TimeUnits;
import lara.Strings;

/**
 * Measures execution time of an application.
 */
function ExecutionTimeMetric(prefix) {
    // Parent constructor
    Metric.call(this, "Execution Time");
	
	this._prefix = prefix === undefined ? "time:" : prefix;
}
// Inheritance
ExecutionTimeMetric.prototype = Object.create(Metric.prototype);


// Override
ExecutionTimeMetric.prototype.instrument = function($start, $end) {
	var timer = new Timer(TimerUnit.NANOSECONDS);
	timer.setPrintUnit(false);
	timer.time($start, this._prefix , $end);
}

// Override
ExecutionTimeMetric.prototype.report = function(processExecutor) {
	var value = Strings.extractValue(this._prefix, processExecutor.getConsoleOutput());	

	return new MetricResult(parseFloat(value), this.getUnit());
}

ExecutionTimeMetric.prototype.getImport = function() {
	return "lara.metrics.ExecutionTimeMetric";
}

ExecutionTimeMetric.prototype.getUnit = function() {
		return "ns";
}