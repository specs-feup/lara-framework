<?xml version="1.0"?>
<binding> 
   <!--<type name="ROOT">-->
		<!--<member name="aspects" type="Aspects" count="1" />-->
   <!--</type>  -->
   
   <type name="Base">
     <member name="comment" type="string" where="attribute" count="0..1"/>
   </type>
	<type name="Aspects" base="Base">
		<member name="aspect" type="Aspect" count="*" />
		<member name="main" where="attribute" type="string" count="0..1" />
		<member name="declaration" type="Statement" count="*"/>
		<!--  <member name="scriptImport" type="string" count="*"/>  -->
	</type>
		
<!-- ASPECT DEFINITION ************************************************ -->	
  <type name="Aspect" base="Base">
     <member name="name" type="string" key="yes" where="attribute"/>  
     <member name="stage" type="string" where="attribute" count="0..1"/>
     <member name="coord" type="string" where="attribute" count="0..1"/>
     <member name="parameters" type="ParameterSection" count="0..1"/>
     <member name="static" rename="staticBlock" type="Code" count="0..1"/>
     <member name="check" type="Expression" count="0..1"/>
     <member name="initialize" type="Code" count="0..1"/>          
     <member name="finalize" type="Code" count="0..1"/>
     <member name="statement" type="Statement" count="*"/>
  </type>
    
  <type name="ParameterSection" base="Base">
     <member name="input" type="ParameterList" count="0..1"/>
     <member name="output" type="ParameterList" count="0..1"/>  
  </type>
  
  <type name="ParameterList" base="Base">
    <member name="parameter" count="*" type="Parameter"/>
  </type>
  
  <type name="Parameter" base="Expression">
     <member name="name" where="attribute" count="1"/>
     <member name="type" where="attribute" count="0..1"/>     
  </type>
       
  <type name="CodeElem" base="Base">
     <member name="desc" type="string" where="attribute" count="0..1"/>
  </type>   
  
  <type name="Code" base="CodeElem">
     <member name="statement" type="Statement"  count="*"/>     
  </type>    
              
<!-- Statement ************************************************* -->	
  <type name="Statement" base="Base">
     <member name="desc" type="string" where="attribute" count="0..1"/>
     <member name="name" type="string" where="attribute" count="1"/>     
     <member name="component" type="CodeElem" count="*" isAlias="yes"/> 
     <member name="expression" type="Expression" alias="component"/>     
     <member name="code" type="Code" alias="component"/>  
     <member name="label" type="string" where="attribute" count="0..1"/>  
     <member name="coord" type="string" where="attribute" count="0..1"/>
     <member name="dynamic" type="boolean" where="attribute" count="0..1" defaultValue="false"/>
     <member name="concurrent" type="boolean" where="attribute" count="0..1" defaultValue="true"/>
     <member name="execute" type="String" where="attribute" count="0..1" defaultValue="before"/>
  </type>     

  
<!-- Expression ************************************************ -->	
  <type name="Expression" base="CodeElem">
      <member name="expr" type="Expression" count="*" isAlias="yes"/>  
      
      <member name="id" type="ExprId" alias="expr" />
      <member name="literal" type="ExprLiteral" alias="expr" />      
      <member name="property" type="Expression" alias="expr" />
      <member name="call" type="ExprCall" alias="expr" />      
      <member name="op" type="ExprOp" alias="expr" />
      <member name="body" type="ExprBody" alias="expr" /> 
      <member name="key" type="ExprKey" alias="expr" />
  </type>
  
  <!-- special expressions --> 
  <type name="ExprId" base="Expression">
     <member name="name" count="1" where="attribute"/>
     <member name="type" count="0..1" where="attribute"/>
  </type>   
  <type name="ExprLiteral" base="Expression">
     <member name="value" count="0..1" where="attribute"/>
     <member name="type" count="0..1" where="attribute"/>
  </type>    
  <type name="ExprKey" base="Expression">
     <member name="name" where="attribute" count="1"/>
  </type>  
  
  <type name="ExprCall" base="Expression">
     <member name="method" count="1" type="Expression"/>
     <member name="argument" count="*" type="Argument"/>     
  </type>  
  <type name="Argument" base="Expression">
     <member name="name" where="attribute" count="0..1"/>
  </type>
  <type name="ExprOp" base="Expression">
     <member name="name" count="1" where="attribute"/>
     <member name="type" count="0..1" where="attribute"/>
  </type>   
  <type name="ExprBody" base="Expression" vchild="code">
     <member name="code" type="Code" count="1"/>
  </type>   
  
</binding>

